////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : test.vf
// /___/   /\     Timestamp : 12/05/2021 16:16:35
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/Lab-digital/Project_LockandLock/FPGA_LockandLock/test.vf -w D:/Lab-digital/Project_LockandLock/FPGA_LockandLock/test.sch
//Design Name: test
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_test(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module OR6_HXILINX_test (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 100 ps / 10 ps

module CB16CE_HXILINX_test(CEO, Q, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 16'b1111_1111_1111_1111;
   
   output             CEO;
   output [15:0]      Q;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg    [15:0]      Q;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 16'b0000_0000_0000_0000;
	else if (CE)
	  Q <= Q + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = (Q == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_test(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CB8CE_HXILINX_test(CEO, Q, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 8'b1111_1111;
   
   output             CEO;
   output [7:0]       Q;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg   [7:0]        Q;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 8'b0000_0000;
	else if (CE)
	  Q <= Q + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = (Q == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_test (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale  100 ps / 10 ps

module AND6_HXILINX_test (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = I0 && I1 && I2 && I3 && I4 && I5;

endmodule
`timescale 1ns / 1ps

module clockdiv_MUSER_test(OS123, 
                           Clock_out);

    input OS123;
   output Clock_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire Clock_out_DUMMY;
   
   assign Clock_out = Clock_out_DUMMY;
   FD #( .INIT(1'b0) ) XLXI_1 (.C(OS123), 
              .D(XLXN_2), 
              .Q(XLXN_1));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(XLXN_1), 
              .D(XLXN_33), 
              .Q(XLXN_4));
   FD #( .INIT(1'b0) ) XLXI_3 (.C(XLXN_4), 
              .D(XLXN_32), 
              .Q(XLXN_5));
   FD #( .INIT(1'b0) ) XLXI_4 (.C(XLXN_5), 
              .D(XLXN_31), 
              .Q(XLXN_6));
   FD #( .INIT(1'b0) ) XLXI_5 (.C(XLXN_6), 
              .D(XLXN_30), 
              .Q(XLXN_7));
   FD #( .INIT(1'b0) ) XLXI_6 (.C(XLXN_7), 
              .D(XLXN_29), 
              .Q(XLXN_9));
   FD #( .INIT(1'b0) ) XLXI_7 (.C(XLXN_9), 
              .D(XLXN_28), 
              .Q(XLXN_10));
   FD #( .INIT(1'b0) ) XLXI_8 (.C(XLXN_10), 
              .D(XLXN_27), 
              .Q(XLXN_11));
   FD #( .INIT(1'b0) ) XLXI_9 (.C(XLXN_11), 
              .D(XLXN_26), 
              .Q(XLXN_12));
   FD #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_12), 
               .D(XLXN_25), 
               .Q(XLXN_13));
   FD #( .INIT(1'b0) ) XLXI_11 (.C(XLXN_13), 
               .D(XLXN_24), 
               .Q(XLXN_15));
   FD #( .INIT(1'b0) ) XLXI_12 (.C(XLXN_15), 
               .D(XLXN_23), 
               .Q(XLXN_16));
   FD #( .INIT(1'b0) ) XLXI_13 (.C(XLXN_16), 
               .D(XLXN_22), 
               .Q(XLXN_17));
   FD #( .INIT(1'b0) ) XLXI_14 (.C(XLXN_17), 
               .D(XLXN_21), 
               .Q(XLXN_18));
   FD #( .INIT(1'b0) ) XLXI_15 (.C(XLXN_18), 
               .D(XLXN_20), 
               .Q(Clock_out_DUMMY));
   INV  XLXI_31 (.I(XLXN_1), 
                .O(XLXN_2));
   INV  XLXI_32 (.I(XLXN_4), 
                .O(XLXN_33));
   INV  XLXI_33 (.I(XLXN_5), 
                .O(XLXN_32));
   INV  XLXI_34 (.I(XLXN_6), 
                .O(XLXN_31));
   INV  XLXI_35 (.I(XLXN_7), 
                .O(XLXN_30));
   INV  XLXI_36 (.I(XLXN_9), 
                .O(XLXN_29));
   INV  XLXI_37 (.I(XLXN_10), 
                .O(XLXN_28));
   INV  XLXI_38 (.I(XLXN_11), 
                .O(XLXN_27));
   INV  XLXI_39 (.I(XLXN_12), 
                .O(XLXN_26));
   INV  XLXI_40 (.I(XLXN_13), 
                .O(XLXN_25));
   INV  XLXI_41 (.I(XLXN_15), 
                .O(XLXN_24));
   INV  XLXI_42 (.I(XLXN_16), 
                .O(XLXN_23));
   INV  XLXI_43 (.I(XLXN_17), 
                .O(XLXN_22));
   INV  XLXI_44 (.I(XLXN_18), 
                .O(XLXN_21));
   INV  XLXI_45 (.I(Clock_out_DUMMY), 
                .O(XLXN_20));
endmodule
`timescale 1ns / 1ps

module Decoderto7segment_MUSER_test(in1, 
                                    in2, 
                                    in3, 
                                    in4, 
                                    a, 
                                    b, 
                                    c, 
                                    d, 
                                    e, 
                                    f, 
                                    g);

    input in1;
    input in2;
    input in3;
    input in4;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_29;
   wire XLXN_31;
   wire XLXN_33;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_102;
   wire XLXN_103;
   wire XLXN_104;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_124;
   wire XLXN_125;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_131;
   wire XLXN_132;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_139;
   wire XLXN_140;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_147;
   wire XLXN_148;
   wire XLXN_149;
   
   AND2  XLXI_1 (.I0(in3), 
                .I1(XLXN_15), 
                .O(XLXN_43));
   AND2  XLXI_3 (.I0(in3), 
                .I1(in2), 
                .O(XLXN_45));
   AND2  XLXI_5 (.I0(XLXN_20), 
                .I1(in1), 
                .O(XLXN_48));
   AND2  XLXI_6 (.I0(XLXN_26), 
                .I1(XLXN_25), 
                .O(XLXN_49));
   AND2  XLXI_8 (.I0(XLXN_37), 
                .I1(XLXN_36), 
                .O(XLXN_53));
   AND2  XLXI_9 (.I0(XLXN_39), 
                .I1(XLXN_38), 
                .O(XLXN_54));
   AND2  XLXI_13 (.I0(XLXN_65), 
                 .I1(XLXN_64), 
                 .O(XLXN_59));
   AND2  XLXI_14 (.I0(in4), 
                 .I1(XLXN_66), 
                 .O(XLXN_60));
   AND2  XLXI_15 (.I0(in4), 
                 .I1(XLXN_67), 
                 .O(XLXN_61));
   AND2  XLXI_16 (.I0(in2), 
                 .I1(XLXN_68), 
                 .O(XLXN_62));
   AND2  XLXI_17 (.I0(XLXN_12), 
                 .I1(XLXN_13), 
                 .O(XLXN_42));
   AND2  XLXI_18 (.I0(in3), 
                 .I1(XLXN_136), 
                 .O(XLXN_145));
   AND2  XLXI_19 (.I0(XLXN_137), 
                 .I1(in3), 
                 .O(XLXN_146));
   AND2  XLXI_20 (.I0(XLXN_140), 
                 .I1(in1), 
                 .O(XLXN_148));
   AND2  XLXI_26 (.I0(XLXN_78), 
                 .I1(in1), 
                 .O(XLXN_83));
   AND2  XLXI_27 (.I0(XLXN_103), 
                 .I1(XLXN_102), 
                 .O(XLXN_119));
   AND2  XLXI_28 (.I0(XLXN_104), 
                 .I1(in3), 
                 .O(XLXN_120));
   AND2  XLXI_31 (.I0(XLXN_131), 
                 .I1(XLXN_129), 
                 .O(XLXN_124));
   AND2  XLXI_33 (.I0(XLXN_134), 
                 .I1(in2), 
                 .O(XLXN_126));
   AND2  XLXI_34 (.I0(XLXN_69), 
                 .I1(in1), 
                 .O(XLXN_63));
   AND2  XLXI_35 (.I0(XLXN_135), 
                 .I1(in1), 
                 .O(XLXN_127));
   AND2  XLXI_36 (.I0(in3), 
                 .I1(in1), 
                 .O(XLXN_128));
   INV  XLXI_37 (.I(in2), 
                .O(XLXN_13));
   INV  XLXI_38 (.I(in4), 
                .O(XLXN_12));
   INV  XLXI_39 (.I(in1), 
                .O(XLXN_15));
   INV  XLXI_40 (.I(in1), 
                .O(XLXN_16));
   INV  XLXI_41 (.I(in2), 
                .O(XLXN_19));
   INV  XLXI_42 (.I(in3), 
                .O(XLXN_18));
   INV  XLXI_45 (.I(in4), 
                .O(XLXN_20));
   INV  XLXI_46 (.I(in1), 
                .O(XLXN_25));
   INV  XLXI_48 (.I(in1), 
                .O(XLXN_29));
   INV  XLXI_49 (.I(in3), 
                .O(XLXN_31));
   INV  XLXI_50 (.I(in4), 
                .O(XLXN_33));
   INV  XLXI_51 (.I(in2), 
                .O(XLXN_36));
   INV  XLXI_52 (.I(in3), 
                .O(XLXN_37));
   INV  XLXI_53 (.I(in2), 
                .O(XLXN_38));
   INV  XLXI_54 (.I(in4), 
                .O(XLXN_39));
   INV  XLXI_55 (.I(in1), 
                .O(XLXN_40));
   INV  XLXI_56 (.I(in3), 
                .O(XLXN_41));
   INV  XLXI_57 (.I(in1), 
                .O(XLXN_64));
   INV  XLXI_58 (.I(in3), 
                .O(XLXN_65));
   INV  XLXI_59 (.I(in1), 
                .O(XLXN_66));
   INV  XLXI_60 (.I(in3), 
                .O(XLXN_67));
   INV  XLXI_61 (.I(in1), 
                .O(XLXN_68));
   INV  XLXI_62 (.I(in2), 
                .O(XLXN_69));
   INV  XLXI_63 (.I(in2), 
                .O(XLXN_136));
   INV  XLXI_64 (.I(in1), 
                .O(XLXN_70));
   INV  XLXI_65 (.I(in4), 
                .O(XLXN_71));
   INV  XLXI_66 (.I(in2), 
                .O(XLXN_72));
   INV  XLXI_67 (.I(in2), 
                .O(XLXN_73));
   INV  XLXI_68 (.I(in3), 
                .O(XLXN_74));
   INV  XLXI_69 (.I(in2), 
                .O(XLXN_102));
   INV  XLXI_70 (.I(in4), 
                .O(XLXN_75));
   INV  XLXI_71 (.I(in3), 
                .O(XLXN_78));
   INV  XLXI_72 (.I(in4), 
                .O(XLXN_103));
   AND3  XLXI_73 (.I0(in4), 
                 .I1(in2), 
                 .I2(XLXN_16), 
                 .O(XLXN_44));
   AND3  XLXI_74 (.I0(XLXN_18), 
                 .I1(XLXN_19), 
                 .I2(in1), 
                 .O(XLXN_47));
   (* HU_SET = "XLXI_75_0" *) 
   OR6_HXILINX_test  XLXI_75 (.I0(XLXN_48), 
                             .I1(XLXN_47), 
                             .I2(XLXN_45), 
                             .I3(XLXN_44), 
                             .I4(XLXN_43), 
                             .I5(XLXN_42), 
                             .O(a));
   INV  XLXI_81 (.I(in2), 
                .O(XLXN_26));
   (* HU_SET = "XLXI_82_1" *) 
   OR6_HXILINX_test  XLXI_82 (.I0(XLXN_58), 
                             .I1(XLXN_57), 
                             .I2(XLXN_54), 
                             .I3(XLXN_53), 
                             .I4(XLXN_52), 
                             .I5(XLXN_49), 
                             .O(b));
   OR5  XLXI_83 (.I0(XLXN_63), 
                .I1(XLXN_62), 
                .I2(XLXN_61), 
                .I3(XLXN_60), 
                .I4(XLXN_59), 
                .O(c));
   AND3  XLXI_90 (.I0(XLXN_72), 
                 .I1(XLXN_71), 
                 .I2(XLXN_70), 
                 .O(XLXN_79));
   AND3  XLXI_91 (.I0(in4), 
                 .I1(in3), 
                 .I2(XLXN_73), 
                 .O(XLXN_80));
   AND3  XLXI_92 (.I0(in4), 
                 .I1(XLXN_74), 
                 .I2(in2), 
                 .O(XLXN_81));
   AND3  XLXI_93 (.I0(XLXN_75), 
                 .I1(in3), 
                 .I2(in2), 
                 .O(XLXN_82));
   OR5  XLXI_94 (.I0(XLXN_83), 
                .I1(XLXN_82), 
                .I2(XLXN_81), 
                .I3(XLXN_80), 
                .I4(XLXN_79), 
                .O(d));
   INV  XLXI_123 (.I(in4), 
                 .O(XLXN_104));
   OR4  XLXI_150 (.I0(XLXN_122), 
                 .I1(XLXN_121), 
                 .I2(XLXN_120), 
                 .I3(XLXN_119), 
                 .O(e));
   AND3  XLXI_159 (.I0(XLXN_132), 
                  .I1(in2), 
                  .I2(XLXN_133), 
                  .O(XLXN_125));
   OR5  XLXI_167 (.I0(XLXN_128), 
                 .I1(XLXN_127), 
                 .I2(XLXN_126), 
                 .I3(XLXN_125), 
                 .I4(XLXN_124), 
                 .O(f));
   INV  XLXI_168 (.I(in3), 
                 .O(XLXN_129));
   INV  XLXI_169 (.I(in4), 
                 .O(XLXN_131));
   INV  XLXI_170 (.I(in1), 
                 .O(XLXN_133));
   INV  XLXI_171 (.I(in3), 
                 .O(XLXN_132));
   INV  XLXI_172 (.I(in4), 
                 .O(XLXN_134));
   INV  XLXI_173 (.I(in2), 
                 .O(XLXN_135));
   AND2  XLXI_175 (.I0(in4), 
                  .I1(in1), 
                  .O(XLXN_149));
   INV  XLXI_176 (.I(in4), 
                 .O(XLXN_137));
   INV  XLXI_177 (.I(in1), 
                 .O(XLXN_138));
   AND3  XLXI_178 (.I0(XLXN_139), 
                  .I1(in2), 
                  .I2(XLXN_138), 
                  .O(XLXN_147));
   INV  XLXI_179 (.I(in3), 
                 .O(XLXN_139));
   INV  XLXI_180 (.I(in2), 
                 .O(XLXN_140));
   OR5  XLXI_181 (.I0(XLXN_149), 
                 .I1(XLXN_148), 
                 .I2(XLXN_147), 
                 .I3(XLXN_146), 
                 .I4(XLXN_145), 
                 .O(g));
   AND3  XLXI_182 (.I0(XLXN_33), 
                  .I1(XLXN_31), 
                  .I2(XLXN_29), 
                  .O(XLXN_52));
   AND3  XLXI_183 (.I0(in4), 
                  .I1(in3), 
                  .I2(XLXN_40), 
                  .O(XLXN_57));
   AND3  XLXI_184 (.I0(in4), 
                  .I1(XLXN_41), 
                  .I2(in1), 
                  .O(XLXN_58));
   AND2  XLXI_185 (.I0(in3), 
                  .I1(in1), 
                  .O(XLXN_121));
   AND2  XLXI_186 (.I0(in2), 
                  .I1(in1), 
                  .O(XLXN_122));
endmodule
`timescale 1ns / 1ps

module multisegment_MUSER_test(OS123, 
                               SW1, 
                               SW2, 
                               SW3, 
                               SW4, 
                               SW5, 
                               SW6, 
                               SW7, 
                               SW8, 
                               A, 
                               B, 
                               C, 
                               common0, 
                               common1, 
                               D, 
                               E, 
                               F, 
                               G);

    input OS123;
    input SW1;
    input SW2;
    input SW3;
    input SW4;
    input SW5;
    input SW6;
    input SW7;
    input SW8;
   output A;
   output B;
   output C;
   output common0;
   output common1;
   output D;
   output E;
   output F;
   output G;
   
   wire Clock_in;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_41;
   
   Decoderto7segment_MUSER_test  XLXI_1 (.in1(SW1), 
                                        .in2(SW2), 
                                        .in3(SW3), 
                                        .in4(SW4), 
                                        .a(XLXN_9), 
                                        .b(XLXN_10), 
                                        .c(XLXN_11), 
                                        .d(XLXN_12), 
                                        .e(XLXN_13), 
                                        .f(XLXN_14), 
                                        .g(XLXN_15));
   Decoderto7segment_MUSER_test  XLXI_2 (.in1(SW5), 
                                        .in2(SW6), 
                                        .in3(SW7), 
                                        .in4(SW8), 
                                        .a(XLXN_16), 
                                        .b(XLXN_17), 
                                        .c(XLXN_18), 
                                        .d(XLXN_19), 
                                        .e(XLXN_20), 
                                        .f(XLXN_21), 
                                        .g(XLXN_22));
   (* HU_SET = "XLXI_4_2" *) 
   M2_1_HXILINX_test  XLXI_4 (.D0(XLXN_9), 
                             .D1(XLXN_16), 
                             .S0(Clock_in), 
                             .O(A));
   (* HU_SET = "XLXI_5_3" *) 
   M2_1_HXILINX_test  XLXI_5 (.D0(XLXN_10), 
                             .D1(XLXN_17), 
                             .S0(Clock_in), 
                             .O(B));
   (* HU_SET = "XLXI_6_4" *) 
   M2_1_HXILINX_test  XLXI_6 (.D0(XLXN_11), 
                             .D1(XLXN_18), 
                             .S0(Clock_in), 
                             .O(C));
   (* HU_SET = "XLXI_7_5" *) 
   M2_1_HXILINX_test  XLXI_7 (.D0(XLXN_12), 
                             .D1(XLXN_19), 
                             .S0(Clock_in), 
                             .O(D));
   (* HU_SET = "XLXI_8_6" *) 
   M2_1_HXILINX_test  XLXI_8 (.D0(XLXN_13), 
                             .D1(XLXN_20), 
                             .S0(Clock_in), 
                             .O(E));
   (* HU_SET = "XLXI_9_7" *) 
   M2_1_HXILINX_test  XLXI_9 (.D0(XLXN_14), 
                             .D1(XLXN_21), 
                             .S0(Clock_in), 
                             .O(F));
   (* HU_SET = "XLXI_10_8" *) 
   M2_1_HXILINX_test  XLXI_10 (.D0(XLXN_15), 
                              .D1(XLXN_22), 
                              .S0(Clock_in), 
                              .O(G));
   INV  XLXI_20 (.I(Clock_in), 
                .O(common1));
   OR2  XLXI_21 (.I0(XLXN_41), 
                .I1(Clock_in), 
                .O(common0));
   GND  XLXI_22 (.G(XLXN_41));
   clockdiv_MUSER_test  XLXI_23 (.OS123(OS123), 
                                .Clock_out(Clock_in));
endmodule
`timescale 1ns / 1ps

module clockdivtest_MUSER_test(OS123, 
                               Clock_out);

    input OS123;
   output Clock_out;
   
   wire [15:0] Q;
   wire [7:0] Q1;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_141;
   wire XLXN_143;
   
   (* HU_SET = "XLXI_31_9" *) 
   CB16CE_HXILINX_test  XLXI_31 (.C(OS123), 
                                .CE(XLXN_41), 
                                .CLR(XLXN_141), 
                                .CEO(XLXN_42), 
                                .Q(Q[15:0]), 
                                .TC());
   (* HU_SET = "XLXI_34_10" *) 
   CB8CE_HXILINX_test  XLXI_34 (.C(OS123), 
                               .CE(XLXN_42), 
                               .CLR(XLXN_141), 
                               .CEO(), 
                               .Q(Q1[7:0]), 
                               .TC());
   VCC  XLXI_35 (.P(XLXN_41));
   AND4B4  XLXI_42 (.I0(Q[0]), 
                   .I1(Q[1]), 
                   .I2(Q[2]), 
                   .I3(Q[3]), 
                   .O(XLXN_98));
   AND4B3  XLXI_46 (.I0(Q[4]), 
                   .I1(Q[5]), 
                   .I2(Q[6]), 
                   .I3(Q[7]), 
                   .O(XLXN_97));
   AND4B2  XLXI_47 (.I0(Q[8]), 
                   .I1(Q[11]), 
                   .I2(Q[9]), 
                   .I3(Q[10]), 
                   .O(XLXN_96));
   AND4B2  XLXI_48 (.I0(Q[13]), 
                   .I1(Q[14]), 
                   .I2(Q[12]), 
                   .I3(Q[15]), 
                   .O(XLXN_95));
   AND4B3  XLXI_49 (.I0(Q1[0]), 
                   .I1(Q1[1]), 
                   .I2(Q1[2]), 
                   .I3(Q1[3]), 
                   .O(XLXN_100));
   (* HU_SET = "XLXI_51_11" *) 
   AND6_HXILINX_test  XLXI_51 (.I0(XLXN_100), 
                              .I1(XLXN_99), 
                              .I2(XLXN_98), 
                              .I3(XLXN_97), 
                              .I4(XLXN_96), 
                              .I5(XLXN_95), 
                              .O(XLXN_141));
   AND4B2  XLXI_52 (.I0(Q1[6]), 
                   .I1(Q1[5]), 
                   .I2(Q1[4]), 
                   .I3(Q1[7]), 
                   .O(XLXN_99));
   (* HU_SET = "XLXI_63_12" *) 
   FTC_HXILINX_test  XLXI_63 (.C(XLXN_141), 
                             .CLR(), 
                             .T(XLXN_143), 
                             .Q(Clock_out));
   VCC  XLXI_64 (.P(XLXN_143));
endmodule
`timescale 1ns / 1ps

module counter_MUSER_test(Buzzer, 
                          Clock_in, 
                          BuzzerReal);

    input Buzzer;
    input Clock_in;
   output BuzzerReal;
   
   wire XLXN_100;
   wire XLXN_105;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_118;
   wire BuzzerReal_DUMMY;
   
   assign BuzzerReal = BuzzerReal_DUMMY;
   FDC  XLXI_26 (.C(Buzzer), 
                .CLR(XLXN_105), 
                .D(Buzzer), 
                .Q(BuzzerReal_DUMMY));
   (* HU_SET = "XLXI_28_13" *) 
   FJKC_HXILINX_test  XLXI_28 (.C(XLXN_100), 
                              .CLR(XLXN_105), 
                              .J(XLXN_108), 
                              .K(XLXN_108), 
                              .Q(XLXN_105));
   INV  XLXI_30 (.I(XLXN_109), 
                .O(XLXN_100));
   VCC  XLXI_33 (.P(XLXN_108));
   AND2  XLXI_35 (.I0(XLXN_118), 
                 .I1(BuzzerReal_DUMMY), 
                 .O(XLXN_109));
   clockdivtest_MUSER_test  XLXI_38 (.OS123(Clock_in), 
                                    .Clock_out(XLXN_118));
endmodule
`timescale 1ns / 1ps

module buzzer_MUSER_test(Buzzer, 
                         Clock_in, 
                         Enter, 
                         BuzzerReal);

    input Buzzer;
    input Clock_in;
    input Enter;
   output BuzzerReal;
   
   wire XLXN_19;
   wire XLXN_21;
   
   AND2  XLXI_3 (.I0(XLXN_19), 
                .I1(Enter), 
                .O(XLXN_21));
   INV  XLXI_4 (.I(Buzzer), 
               .O(XLXN_19));
   counter_MUSER_test  XLXI_10 (.Buzzer(XLXN_21), 
                               .Clock_in(Clock_in), 
                               .BuzzerReal(BuzzerReal));
endmodule
`timescale 1ns / 1ps

module checking_MUSER_test(checkpass1, 
                           checkpass2, 
                           checkpass3, 
                           checkpass4, 
                           checkpass5, 
                           checkpass6, 
                           checkpass7, 
                           checkpass8, 
                           pass1, 
                           pass2, 
                           pass3, 
                           pass4, 
                           pass5, 
                           pass6, 
                           pass7, 
                           pass8, 
                           Outchecking);

    input checkpass1;
    input checkpass2;
    input checkpass3;
    input checkpass4;
    input checkpass5;
    input checkpass6;
    input checkpass7;
    input checkpass8;
    input pass1;
    input pass2;
    input pass3;
    input pass4;
    input pass5;
    input pass6;
    input pass7;
    input pass8;
   output Outchecking;
   
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   
   XNOR2  XLXI_1 (.I0(checkpass1), 
                 .I1(pass1), 
                 .O(XLXN_18));
   XNOR2  XLXI_2 (.I0(checkpass2), 
                 .I1(pass2), 
                 .O(XLXN_19));
   XNOR2  XLXI_3 (.I0(checkpass3), 
                 .I1(pass3), 
                 .O(XLXN_20));
   XNOR2  XLXI_4 (.I0(checkpass4), 
                 .I1(pass4), 
                 .O(XLXN_21));
   XNOR2  XLXI_5 (.I0(checkpass5), 
                 .I1(pass5), 
                 .O(XLXN_22));
   XNOR2  XLXI_6 (.I0(checkpass6), 
                 .I1(pass6), 
                 .O(XLXN_23));
   XNOR2  XLXI_7 (.I0(checkpass7), 
                 .I1(pass7), 
                 .O(XLXN_24));
   XNOR2  XLXI_8 (.I0(checkpass8), 
                 .I1(pass8), 
                 .O(XLXN_25));
   AND5  XLXI_9 (.I0(XLXN_22), 
                .I1(XLXN_21), 
                .I2(XLXN_20), 
                .I3(XLXN_19), 
                .I4(XLXN_18), 
                .O(XLXN_27));
   AND3  XLXI_10 (.I0(XLXN_25), 
                 .I1(XLXN_24), 
                 .I2(XLXN_23), 
                 .O(XLXN_28));
   AND2  XLXI_11 (.I0(XLXN_28), 
                 .I1(XLXN_27), 
                 .O(Outchecking));
endmodule
`timescale 1ns / 1ps

module setpass_MUSER_test(checkpass1, 
                          checkpass2, 
                          checkpass3, 
                          checkpass4, 
                          checkpass5, 
                          checkpass6, 
                          checkpass7, 
                          checkpass8, 
                          Enable, 
                          Enter, 
                          Lock, 
                          Mode, 
                          pass1, 
                          pass2, 
                          pass3, 
                          pass4, 
                          pass5, 
                          pass6, 
                          pass7, 
                          pass8, 
                          newpass1, 
                          newpass2, 
                          newpass3, 
                          newpass4, 
                          newpass5, 
                          newpass6, 
                          newpass7, 
                          newpass8, 
                          passtrue, 
                          setpass);

    input checkpass1;
    input checkpass2;
    input checkpass3;
    input checkpass4;
    input checkpass5;
    input checkpass6;
    input checkpass7;
    input checkpass8;
    input Enable;
    input Enter;
    input Lock;
    input Mode;
    input pass1;
    input pass2;
    input pass3;
    input pass4;
    input pass5;
    input pass6;
    input pass7;
    input pass8;
   output newpass1;
   output newpass2;
   output newpass3;
   output newpass4;
   output newpass5;
   output newpass6;
   output newpass7;
   output newpass8;
   output passtrue;
   output setpass;
   
   wire XLXN_21;
   wire XLXN_30;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_83;
   wire XLXN_87;
   wire XLXN_88;
   wire passtrue_DUMMY;
   wire setpass_DUMMY;
   
   assign passtrue = passtrue_DUMMY;
   assign setpass = setpass_DUMMY;
   FD #( .INIT(1'b0) ) XLXI_1 (.C(XLXN_66), 
              .D(pass1), 
              .Q(newpass1));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(XLXN_66), 
              .D(pass2), 
              .Q(newpass2));
   FD #( .INIT(1'b0) ) XLXI_3 (.C(XLXN_66), 
              .D(pass3), 
              .Q(newpass3));
   FD #( .INIT(1'b0) ) XLXI_4 (.C(XLXN_66), 
              .D(pass4), 
              .Q(newpass4));
   FD #( .INIT(1'b0) ) XLXI_8 (.C(XLXN_66), 
              .D(pass6), 
              .Q(newpass6));
   FD #( .INIT(1'b0) ) XLXI_9 (.C(XLXN_66), 
              .D(pass7), 
              .Q(newpass7));
   FD #( .INIT(1'b0) ) XLXI_10 (.C(XLXN_66), 
               .D(pass8), 
               .Q(newpass8));
   FD #( .INIT(1'b0) ) XLXI_11 (.C(XLXN_66), 
               .D(pass5), 
               .Q(newpass5));
   OR2  XLXI_17 (.I0(XLXN_66), 
                .I1(Mode), 
                .O(XLXN_87));
   (* HU_SET = "XLXI_18_14" *) 
   FJKC_HXILINX_test  XLXI_18 (.C(XLXN_21), 
                              .CLR(Lock), 
                              .J(Enable), 
                              .K(Enable), 
                              .Q(setpass_DUMMY));
   AND2  XLXI_19 (.I0(setpass_DUMMY), 
                 .I1(Enter), 
                 .O(XLXN_30));
   AND2  XLXI_21 (.I0(XLXN_30), 
                 .I1(passtrue_DUMMY), 
                 .O(XLXN_66));
   AND2  XLXI_22 (.I0(XLXN_65), 
                 .I1(XLXN_67), 
                 .O(XLXN_68));
   AND2  XLXI_24 (.I0(XLXN_64), 
                 .I1(setpass_DUMMY), 
                 .O(XLXN_65));
   checking_MUSER_test  XLXI_25 (.checkpass1(checkpass1), 
                                .checkpass2(checkpass2), 
                                .checkpass3(checkpass3), 
                                .checkpass4(checkpass4), 
                                .checkpass5(checkpass5), 
                                .checkpass6(checkpass6), 
                                .checkpass7(checkpass7), 
                                .checkpass8(checkpass8), 
                                .pass1(pass1), 
                                .pass2(pass2), 
                                .pass3(pass3), 
                                .pass4(pass4), 
                                .pass5(pass5), 
                                .pass6(pass6), 
                                .pass7(pass7), 
                                .pass8(pass8), 
                                .Outchecking(XLXN_64));
   FDC  XLXI_27 (.C(XLXN_88), 
                .CLR(XLXN_83), 
                .D(XLXN_68), 
                .Q(passtrue_DUMMY));
   INV  XLXI_28 (.I(XLXN_66), 
                .O(XLXN_67));
   OR2  XLXI_29 (.I0(Lock), 
                .I1(Lock), 
                .O(XLXN_83));
   INV  XLXI_30 (.I(XLXN_87), 
                .O(XLXN_21));
   INV  XLXI_31 (.I(XLXN_30), 
                .O(XLXN_88));
endmodule
`timescale 1ns / 1ps

module checkpass_MUSER_test(checkpass1, 
                            checkpass2, 
                            checkpass3, 
                            checkpass4, 
                            checkpass5, 
                            checkpass6, 
                            checkpass7, 
                            checkpass8, 
                            Enter, 
                            Lock, 
                            pass1, 
                            pass2, 
                            pass3, 
                            pass4, 
                            pass5, 
                            pass6, 
                            pass7, 
                            pass8, 
                            Buzzer, 
                            LED);

    input checkpass1;
    input checkpass2;
    input checkpass3;
    input checkpass4;
    input checkpass5;
    input checkpass6;
    input checkpass7;
    input checkpass8;
    input Enter;
    input Lock;
    input pass1;
    input pass2;
    input pass3;
    input pass4;
    input pass5;
    input pass6;
    input pass7;
    input pass8;
   output Buzzer;
   output LED;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_32;
   wire Buzzer_DUMMY;
   
   assign Buzzer = Buzzer_DUMMY;
   XNOR2  XLXI_4 (.I0(checkpass1), 
                 .I1(pass1), 
                 .O(XLXN_7));
   XNOR2  XLXI_5 (.I0(checkpass2), 
                 .I1(pass2), 
                 .O(XLXN_8));
   XNOR2  XLXI_6 (.I0(checkpass3), 
                 .I1(pass3), 
                 .O(XLXN_9));
   XNOR2  XLXI_7 (.I0(checkpass4), 
                 .I1(pass4), 
                 .O(XLXN_10));
   XNOR2  XLXI_8 (.I0(checkpass5), 
                 .I1(pass5), 
                 .O(XLXN_11));
   XNOR2  XLXI_9 (.I0(checkpass6), 
                 .I1(pass6), 
                 .O(XLXN_12));
   XNOR2  XLXI_10 (.I0(checkpass7), 
                  .I1(pass7), 
                  .O(XLXN_14));
   XNOR2  XLXI_11 (.I0(checkpass8), 
                  .I1(pass8), 
                  .O(XLXN_15));
   AND5  XLXI_12 (.I0(XLXN_11), 
                 .I1(XLXN_10), 
                 .I2(XLXN_9), 
                 .I3(XLXN_8), 
                 .I4(XLXN_7), 
                 .O(XLXN_16));
   AND3  XLXI_13 (.I0(XLXN_15), 
                 .I1(XLXN_14), 
                 .I2(XLXN_12), 
                 .O(XLXN_17));
   AND2  XLXI_14 (.I0(XLXN_17), 
                 .I1(XLXN_16), 
                 .O(Buzzer_DUMMY));
   (* HU_SET = "XLXI_15_15" *) 
   FJKC_HXILINX_test  XLXI_15 (.C(Enter), 
                              .CLR(Lock), 
                              .J(Buzzer_DUMMY), 
                              .K(XLXN_32), 
                              .Q(LED));
   GND  XLXI_21 (.G(XLXN_32));
endmodule
`timescale 1ns / 1ps

module test(Enter, 
            Lock, 
            Mode, 
            OSC123, 
            SW1, 
            SW2, 
            SW3, 
            SW4, 
            SW5, 
            SW6, 
            SW7, 
            SW8, 
            A, 
            B, 
            BuzzerReal, 
            C, 
            comm2, 
            comm4, 
            D, 
            E, 
            F, 
            G, 
            LED, 
            LedPasstrue, 
            LedSetpass, 
            Unlock);

    input Enter;
    input Lock;
    input Mode;
    input OSC123;
    input SW1;
    input SW2;
    input SW3;
    input SW4;
    input SW5;
    input SW6;
    input SW7;
    input SW8;
   output A;
   output B;
   output BuzzerReal;
   output C;
   output comm2;
   output comm4;
   output D;
   output E;
   output F;
   output G;
   (* LOC = "Minor" *) 
   output LED;
   output LedPasstrue;
   output LedSetpass;
   output Unlock;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_89;
   wire XLXN_107;
   wire XLXN_109;
   wire XLXN_359;
   wire XLXN_360;
   wire XLXN_363;
   wire XLXN_364;
   wire XLXN_365;
   wire XLXN_366;
   wire XLXN_367;
   wire XLXN_368;
   wire XLXN_369;
   wire XLXN_371;
   wire XLXN_372;
   wire XLXN_373;
   wire XLXN_374;
   wire XLXN_375;
   wire XLXN_376;
   wire XLXN_377;
   wire XLXN_379;
   wire XLXN_382;
   wire XLXN_383;
   wire XLXN_403;
   wire XLXN_404;
   wire LED_DUMMY;
   
   assign LED = LED_DUMMY;
   INV  XLXI_1 (.I(LED_DUMMY), 
               .O(XLXN_3));
   checkpass_MUSER_test  XLXI_2 (.checkpass1(XLXN_16), 
                                .checkpass2(XLXN_6), 
                                .checkpass3(XLXN_107), 
                                .checkpass4(XLXN_18), 
                                .checkpass5(XLXN_89), 
                                .checkpass6(XLXN_12), 
                                .checkpass7(XLXN_10), 
                                .checkpass8(XLXN_8), 
                                .Enter(XLXN_109), 
                                .Lock(Lock), 
                                .pass1(SW1), 
                                .pass2(SW2), 
                                .pass3(SW3), 
                                .pass4(SW4), 
                                .pass5(SW5), 
                                .pass6(SW6), 
                                .pass7(SW7), 
                                .pass8(SW8), 
                                .Buzzer(XLXN_2), 
                                .LED(LED_DUMMY));
   setpass_MUSER_test  XLXI_3 (.checkpass1(XLXN_16), 
                              .checkpass2(XLXN_6), 
                              .checkpass3(XLXN_107), 
                              .checkpass4(XLXN_18), 
                              .checkpass5(XLXN_89), 
                              .checkpass6(XLXN_12), 
                              .checkpass7(XLXN_10), 
                              .checkpass8(XLXN_8), 
                              .Enable(LED_DUMMY), 
                              .Enter(XLXN_359), 
                              .Lock(Lock), 
                              .Mode(Mode), 
                              .pass1(SW1), 
                              .pass2(SW2), 
                              .pass3(SW3), 
                              .pass4(SW4), 
                              .pass5(SW5), 
                              .pass6(SW6), 
                              .pass7(SW7), 
                              .pass8(SW8), 
                              .newpass1(XLXN_16), 
                              .newpass2(XLXN_6), 
                              .newpass3(XLXN_107), 
                              .newpass4(XLXN_18), 
                              .newpass5(XLXN_89), 
                              .newpass6(XLXN_12), 
                              .newpass7(XLXN_10), 
                              .newpass8(XLXN_8), 
                              .passtrue(LedPasstrue), 
                              .setpass(LedSetpass));
   AND2  XLXI_4 (.I0(LED_DUMMY), 
                .I1(LED_DUMMY), 
                .O(Unlock));
   AND2  XLXI_6 (.I0(XLXN_359), 
                .I1(XLXN_3), 
                .O(XLXN_109));
   buzzer_MUSER_test  XLXI_31 (.Buzzer(XLXN_2), 
                              .Clock_in(OSC123), 
                              .Enter(XLXN_109), 
                              .BuzzerReal(BuzzerReal));
   multisegment_MUSER_test  XLXI_32 (.OS123(OSC123), 
                                    .SW1(SW4), 
                                    .SW2(SW3), 
                                    .SW3(SW2), 
                                    .SW4(SW1), 
                                    .SW5(SW8), 
                                    .SW6(SW7), 
                                    .SW7(SW6), 
                                    .SW8(SW5), 
                                    .A(XLXN_364), 
                                    .B(XLXN_366), 
                                    .C(XLXN_368), 
                                    .common0(XLXN_404), 
                                    .common1(XLXN_403), 
                                    .D(XLXN_371), 
                                    .E(XLXN_373), 
                                    .F(XLXN_375), 
                                    .G(XLXN_376));
   AND2  XLXI_56 (.I0(Enter), 
                 .I1(XLXN_360), 
                 .O(XLXN_359));
   INV  XLXI_61 (.I(XLXN_383), 
                .O(XLXN_360));
   (* HU_SET = "XLXI_64_16" *) 
   M2_1_HXILINX_test  XLXI_64 (.D0(XLXN_363), 
                              .D1(XLXN_364), 
                              .S0(XLXN_360), 
                              .O(A));
   (* HU_SET = "XLXI_65_17" *) 
   M2_1_HXILINX_test  XLXI_65 (.D0(XLXN_365), 
                              .D1(XLXN_366), 
                              .S0(XLXN_360), 
                              .O(B));
   (* HU_SET = "XLXI_66_18" *) 
   M2_1_HXILINX_test  XLXI_66 (.D0(XLXN_367), 
                              .D1(XLXN_368), 
                              .S0(XLXN_360), 
                              .O(C));
   (* HU_SET = "XLXI_67_19" *) 
   M2_1_HXILINX_test  XLXI_67 (.D0(XLXN_369), 
                              .D1(XLXN_371), 
                              .S0(XLXN_360), 
                              .O(D));
   (* HU_SET = "XLXI_68_20" *) 
   M2_1_HXILINX_test  XLXI_68 (.D0(XLXN_372), 
                              .D1(XLXN_373), 
                              .S0(XLXN_360), 
                              .O(E));
   (* HU_SET = "XLXI_69_21" *) 
   M2_1_HXILINX_test  XLXI_69 (.D0(XLXN_374), 
                              .D1(XLXN_375), 
                              .S0(XLXN_360), 
                              .O(F));
   (* HU_SET = "XLXI_70_22" *) 
   M2_1_HXILINX_test  XLXI_70 (.D0(XLXN_377), 
                              .D1(XLXN_376), 
                              .S0(XLXN_360), 
                              .O(G));
   (* HU_SET = "XLXI_73_23" *) 
   M2_1_HXILINX_test  XLXI_73 (.D0(XLXN_379), 
                              .D1(XLXN_404), 
                              .S0(XLXN_360), 
                              .O(comm2));
   (* HU_SET = "XLXI_74_24" *) 
   M2_1_HXILINX_test  XLXI_74 (.D0(XLXN_382), 
                              .D1(XLXN_403), 
                              .S0(XLXN_360), 
                              .O(comm4));
endmodule
