////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : buzzer.vf
// /___/   /\     Timestamp : 12/05/2021 14:37:49
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Lab-digital/FPGA_SMRAT EZ PASSWORD/buzzer.vf" -w "D:/Lab-digital/FPGA_SMRAT EZ PASSWORD/buzzer.sch"
//Design Name: buzzer
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_buzzer(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 100 ps / 10 ps

module CB16CE_HXILINX_buzzer(CEO, Q, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 16'b1111_1111_1111_1111;
   
   output             CEO;
   output [15:0]      Q;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg    [15:0]      Q;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 16'b0000_0000_0000_0000;
	else if (CE)
	  Q <= Q + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = (Q == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_buzzer(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CB8CE_HXILINX_buzzer(CEO, Q, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 8'b1111_1111;
   
   output             CEO;
   output [7:0]       Q;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg   [7:0]        Q;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 8'b0000_0000;
	else if (CE)
	  Q <= Q + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = (Q == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module AND6_HXILINX_buzzer (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = I0 && I1 && I2 && I3 && I4 && I5;

endmodule
`timescale 1ns / 1ps

module clockdivtest_MUSER_buzzer(OS123, 
                                 Clock_out);

    input OS123;
   output Clock_out;
   
   wire [15:0] Q;
   wire [7:0] Q1;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_100;
   wire XLXN_141;
   wire XLXN_143;
   
   (* HU_SET = "XLXI_31_126" *) 
   CB16CE_HXILINX_buzzer  XLXI_31 (.C(OS123), 
                                  .CE(XLXN_41), 
                                  .CLR(XLXN_141), 
                                  .CEO(XLXN_42), 
                                  .Q(Q[15:0]), 
                                  .TC());
   (* HU_SET = "XLXI_34_127" *) 
   CB8CE_HXILINX_buzzer  XLXI_34 (.C(OS123), 
                                 .CE(XLXN_42), 
                                 .CLR(XLXN_141), 
                                 .CEO(), 
                                 .Q(Q1[7:0]), 
                                 .TC());
   VCC  XLXI_35 (.P(XLXN_41));
   AND4B4  XLXI_42 (.I0(Q[0]), 
                   .I1(Q[1]), 
                   .I2(Q[2]), 
                   .I3(Q[3]), 
                   .O(XLXN_98));
   AND4B3  XLXI_46 (.I0(Q[4]), 
                   .I1(Q[5]), 
                   .I2(Q[6]), 
                   .I3(Q[7]), 
                   .O(XLXN_97));
   AND4B2  XLXI_47 (.I0(Q[8]), 
                   .I1(Q[11]), 
                   .I2(Q[9]), 
                   .I3(Q[10]), 
                   .O(XLXN_96));
   AND4B2  XLXI_48 (.I0(Q[13]), 
                   .I1(Q[14]), 
                   .I2(Q[12]), 
                   .I3(Q[15]), 
                   .O(XLXN_95));
   AND4B3  XLXI_49 (.I0(Q1[0]), 
                   .I1(Q1[1]), 
                   .I2(Q1[2]), 
                   .I3(Q1[3]), 
                   .O(XLXN_100));
   (* HU_SET = "XLXI_51_128" *) 
   AND6_HXILINX_buzzer  XLXI_51 (.I0(XLXN_100), 
                                .I1(XLXN_99), 
                                .I2(XLXN_98), 
                                .I3(XLXN_97), 
                                .I4(XLXN_96), 
                                .I5(XLXN_95), 
                                .O(XLXN_141));
   AND4B2  XLXI_52 (.I0(Q1[6]), 
                   .I1(Q1[5]), 
                   .I2(Q1[4]), 
                   .I3(Q1[7]), 
                   .O(XLXN_99));
   (* HU_SET = "XLXI_63_129" *) 
   FTC_HXILINX_buzzer  XLXI_63 (.C(XLXN_141), 
                               .CLR(), 
                               .T(XLXN_143), 
                               .Q(Clock_out));
   VCC  XLXI_64 (.P(XLXN_143));
endmodule
`timescale 1ns / 1ps

module counter_MUSER_buzzer(Buzzer, 
                            Clock_in, 
                            BuzzerReal);

    input Buzzer;
    input Clock_in;
   output BuzzerReal;
   
   wire XLXN_100;
   wire XLXN_105;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_118;
   wire BuzzerReal_DUMMY;
   
   assign BuzzerReal = BuzzerReal_DUMMY;
   FDC  XLXI_26 (.C(Buzzer), 
                .CLR(XLXN_105), 
                .D(Buzzer), 
                .Q(BuzzerReal_DUMMY));
   (* HU_SET = "XLXI_28_130" *) 
   FJKC_HXILINX_buzzer  XLXI_28 (.C(XLXN_100), 
                                .CLR(XLXN_105), 
                                .J(XLXN_108), 
                                .K(XLXN_108), 
                                .Q(XLXN_105));
   INV  XLXI_30 (.I(XLXN_109), 
                .O(XLXN_100));
   VCC  XLXI_33 (.P(XLXN_108));
   AND2  XLXI_35 (.I0(XLXN_118), 
                 .I1(BuzzerReal_DUMMY), 
                 .O(XLXN_109));
   clockdivtest_MUSER_buzzer  XLXI_38 (.OS123(Clock_in), 
                                      .Clock_out(XLXN_118));
endmodule
`timescale 1ns / 1ps

module buzzer(Buzzer, 
              Clock_in, 
              Enter, 
              BuzzerReal);

    input Buzzer;
    input Clock_in;
    input Enter;
   output BuzzerReal;
   
   wire XLXN_19;
   wire XLXN_21;
   
   AND2  XLXI_3 (.I0(XLXN_19), 
                .I1(Enter), 
                .O(XLXN_21));
   INV  XLXI_4 (.I(Buzzer), 
               .O(XLXN_19));
   counter_MUSER_buzzer  XLXI_10 (.Buzzer(XLXN_21), 
                                 .Clock_in(Clock_in), 
                                 .BuzzerReal(BuzzerReal));
endmodule
